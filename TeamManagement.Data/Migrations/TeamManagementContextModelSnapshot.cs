// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamManagement.Data.Models;

namespace TeamManagement.Data.Migrations
{
    [DbContext(typeof(TeamManagementContext))]
    partial class TeamManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TeamManagement.Data.Models.BusinessUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessUnitLocationId")
                        .HasColumnType("int");

                    b.Property<int>("BusinessUnitTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentBusinessUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitLocationId");

                    b.HasIndex("BusinessUnitTypeId");

                    b.ToTable("BusinessUnit");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessUnitLocationId = 1,
                            BusinessUnitTypeId = 1,
                            Name = "Blue Bulls"
                        },
                        new
                        {
                            Id = 2,
                            BusinessUnitLocationId = 1,
                            BusinessUnitTypeId = 2,
                            Name = "Super Rugby",
                            ParentBusinessUnitId = 1
                        },
                        new
                        {
                            Id = 3,
                            BusinessUnitLocationId = 1,
                            BusinessUnitTypeId = 2,
                            Name = "Currie Cup",
                            ParentBusinessUnitId = 1
                        },
                        new
                        {
                            Id = 4,
                            BusinessUnitLocationId = 1,
                            BusinessUnitTypeId = 2,
                            Name = "Under 21",
                            ParentBusinessUnitId = 1
                        },
                        new
                        {
                            Id = 5,
                            BusinessUnitLocationId = 1,
                            BusinessUnitTypeId = 2,
                            Name = "Under 18",
                            ParentBusinessUnitId = 1
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.BusinessUnitLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhysicalTown")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessUnitLocation");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Loftus Versfeld Stadium",
                            PhysicalCode = "0007",
                            PhysicalLine1 = "416 Kirkness St",
                            PhysicalLine2 = "Arcadia",
                            PhysicalTown = "Pretoria"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ellis Park Stadium",
                            PhysicalCode = "2094",
                            PhysicalLine1 = "S Park Ln",
                            PhysicalLine2 = "New Doornfontein",
                            PhysicalTown = "Johannesburg"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Toyota Stadium",
                            PhysicalCode = "9320",
                            PhysicalLine1 = "Willows",
                            PhysicalLine2 = "",
                            PhysicalTown = "Bloemfontein"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Newlands Rugby Stadium",
                            PhysicalCode = "7700",
                            PhysicalLine1 = "8 Boundary Rd",
                            PhysicalLine2 = "Newlands",
                            PhysicalTown = "Cape Town"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Jonsson Kings Park",
                            PhysicalCode = "4025",
                            PhysicalLine1 = "Jacko Jackson Dr",
                            PhysicalLine2 = "Stamford Hill",
                            PhysicalTown = "Durban"
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.BusinessUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BusinessUnitType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 2,
                            Name = "RugbyTeam"
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BusinessUnitId")
                        .HasColumnType("int");

                    b.Property<string>("CellNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Firstnames")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Initials")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("EmployeeTypeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BusinessUnitId = 2,
                            CellNumber = "1234567890",
                            Email = "test@gmail.com",
                            EmployeeTypeId = 3,
                            Firstnames = "Jake",
                            Initials = "jw",
                            Surname = "White"
                        },
                        new
                        {
                            Id = 2,
                            BusinessUnitId = 2,
                            CellNumber = "1234567890",
                            Email = "test@gmail.com",
                            EmployeeTypeId = 5,
                            Firstnames = "Handrè",
                            Initials = "hp",
                            Surname = "Pollard"
                        },
                        new
                        {
                            Id = 3,
                            BusinessUnitId = 2,
                            CellNumber = "1234567890",
                            Email = "test@gmail.com",
                            EmployeeTypeId = 5,
                            Firstnames = "Warrick",
                            Initials = "wg",
                            Surname = "Gelant"
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Management"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Coach"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Physiotherapist"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Player"
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.PlayerData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("PlayerData");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 26,
                            EmployeeId = 2,
                            Height = 1.8799999999999999,
                            Weight = 96.0
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            EmployeeId = 3,
                            Height = 1.78,
                            Weight = 85.0
                        });
                });

            modelBuilder.Entity("TeamManagement.Data.Models.BusinessUnit", b =>
                {
                    b.HasOne("TeamManagement.Data.Models.BusinessUnitLocation", "BusinessUnitLocation")
                        .WithMany()
                        .HasForeignKey("BusinessUnitLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamManagement.Data.Models.BusinessUnitType", "BusinessUnitType")
                        .WithMany()
                        .HasForeignKey("BusinessUnitTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnitLocation");

                    b.Navigation("BusinessUnitType");
                });

            modelBuilder.Entity("TeamManagement.Data.Models.Employee", b =>
                {
                    b.HasOne("TeamManagement.Data.Models.BusinessUnit", "BusinessUnit")
                        .WithMany("Employees")
                        .HasForeignKey("BusinessUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TeamManagement.Data.Models.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BusinessUnit");

                    b.Navigation("EmployeeType");
                });

            modelBuilder.Entity("TeamManagement.Data.Models.PlayerData", b =>
                {
                    b.HasOne("TeamManagement.Data.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TeamManagement.Data.Models.BusinessUnit", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
